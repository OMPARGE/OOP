import java.io.*;
import java.util.*;

class Student {
    private int studentId;
    private String name;
    private int rollNo;
    private String className;
    private double marks;
    private String address;

    public Student(int studentId, String name, int rollNo, String className, double marks, String address) {
        this.studentId = studentId;
        this.name = name;
        this.rollNo = rollNo;
        this.className = className;
        this.marks = marks;
        this.address = address;
    }

    @Override
    public String toString() {
        return "Student ID: " + studentId +
                "\nName: " + name +
                "\nRoll Number: " + rollNo +
                "\nClass: " + className +
                "\nMarks: " + marks +
                "\nAddress: " + address + "\n";
    }

    // Getters and setters if needed
}

 class StudentDatabase {
    private static final String FILE_NAME = "student_database.txt";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1 - Create Database");
            System.out.println("2 - Display Database");
            System.out.println("3 - Delete Record");
            System.out.println("4 - Update Record");
            System.out.println("5 - Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    createDatabase();
                    break;
                case 2:
                    displayDatabase();
                    break;
                case 3:
                    deleteRecord();
                    break;
                case 4:
                    updateRecord();
                    break;
                case 5:
                    System.out.println("Exiting program.");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }

    private static void createDatabase() {
        try (PrintWriter writer = new PrintWriter(new FileWriter(FILE_NAME, true))) {
            Scanner scanner = new Scanner(System.in);

            System.out.print("Enter Student ID: ");
            int studentId = scanner.nextInt();

            System.out.print("Enter Name: ");
            scanner.nextLine(); // consume newline
            String name = scanner.nextLine();

            System.out.print("Enter Roll Number: ");
            int rollNo = scanner.nextInt();

            System.out.print("Enter Class: ");
            scanner.nextLine(); // consume newline
            String className = scanner.nextLine();

            System.out.print("Enter Marks: ");
            double marks = scanner.nextDouble();

            System.out.print("Enter Address: ");
            scanner.nextLine(); // consume newline
            String address = scanner.nextLine();

            Student student = new Student(studentId, name, rollNo, className, marks, address);

            writer.println(student.toString());
            System.out.println("Record added successfully.");

        } catch (IOException e) {
            System.out.println("An error occurred while creating the database: " + e.getMessage());
        }
    }

    private static void displayDatabase() {
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        } catch (IOException e) {
            System.out.println("An error occurred while displaying the database: " + e.getMessage());
        }
    }

    private static void deleteRecord() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter Student ID to delete: ");
        int studentIdToDelete = scanner.nextInt();

        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME));
             PrintWriter writer = new PrintWriter(new FileWriter("temp_database.txt", true))) {

            String line;
            boolean recordDeleted = false;

            while ((line = reader.readLine()) != null) {
                // Assuming the Student ID is the first value in each line
                int existingStudentId = Integer.parseInt(line.split(":")[1].trim());
                if (existingStudentId != studentIdToDelete) {
                    writer.println(line);
                } else {
                    recordDeleted = true;
                }
            }

            if (recordDeleted) {
                System.out.println("Record with Student ID " + studentIdToDelete + " deleted successfully.");
            } else {
                System.out.println("No record found with Student ID " + studentIdToDelete);
            }

        } catch (IOException e) {
            System.out.println("An error occurred while deleting the record: " + e.getMessage());
        }

        // Rename temp file to original file
        File tempFile = new File("temp_database.txt");
        File originalFile = new File(FILE_NAME);
        if (tempFile.renameTo(originalFile)) {
            System.out.println("Database updated successfully.");
        } else {
            System.out.println("Error updating database.");
        }
    }

    private static void updateRecord() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter Student ID to update: ");
        int studentIdToUpdate = scanner.nextInt();

        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME));
             PrintWriter writer = new PrintWriter(new FileWriter("temp_database.txt", true))) {

            String line;
            boolean recordUpdated = false;

            while ((line = reader.readLine()) != null) {
                // Assuming the Student ID is the first value in each line
                int existingStudentId = Integer.parseInt(line.split(":")[1].trim());
                if (existingStudentId == studentIdToUpdate) {
                    System.out.println("Current details:\n" + line);
                    System.out.println("Enter new details:");

                    System.out.print("Enter Name: ");
                    scanner.nextLine(); // consume newline
                    String name = scanner.nextLine();

                    System.out.print("Enter Roll Number: ");
                    int rollNo = scanner.nextInt();

                    System.out.print("Enter Class: ");
                    scanner.nextLine(); // consume newline
                    String className = scanner.nextLine();

                    System.out.print("Enter Marks: ");
                    double marks = scanner.nextDouble();

                    System.out.print("Enter Address: ");
                    scanner.nextLine(); // consume newline
                    String address = scanner.nextLine();

                    Student updatedStudent = new Student(studentIdToUpdate, name, rollNo, className, marks, address);

                    writer.println(updatedStudent.toString());
                    recordUpdated = true;
                    System.out.println("Record updated successfully.");
                } else {
                    writer.println(line);
                }
            }

            if (!recordUpdated) {
                System.out.println("No record found with Student ID " + studentIdToUpdate);
            }

        } catch (IOException e) {
            System.out.println("An error occurred while updating the record: " + e.getMessage());
        }

        // Rename temp file to original file
        File tempFile = new File("temp_database.txt");
        File originalFile = new File(FILE_NAME);
        if (tempFile.renameTo(originalFile)) {
            System.out.println("Database updated successfully.");
        } else {
            System.out.println("Error updating database.");
        }
    }
}
